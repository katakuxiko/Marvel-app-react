{"version":3,"file":"static/js/682.6e6bbc17.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/MarvelService.js","components/hooks/http.hook.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from './error.gif'\r\n\r\nconst ErrorMessage= ()=>{\r\n\treturn(\r\n\t\t<img style={{display: 'block',width:'250px', height:'250px', objectFit:'contain', margin:\"0 auto\"}} src={img} alt='Error'/>\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage;","import {useState,useEffect} from 'react'\nimport { Link } from 'react-router-dom';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\n\nimport useMarvelService from '../../services/MarvelService';\nimport './comicsList.scss';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nconst setContent = (process, Component, newItemLoading) => {\n        switch(process){\n            case 'waiting':\n                return <Spinner/> ;\n                break ;\n            case 'loading':\n                return newItemLoading?<Component />:<Spinner/>;\n                break ;\n            case 'confirmed':\n                return <Component/>;\n                break ;\n            case 'error':\n                return <ErrorMessage/>;\n                break;\n            default:\n                throw new Error(`Unexpected process state`);\n        }\n }\n\nconst ComicsList = () => {\n    const [comicsList,setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(true);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading,error,getAllComics,process,setProcess} =  useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset,true)\n    },[])\n\n    const onRequest=(offset, initial) => {\n        initial ? setNewItemLoading(false):setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n    const onComicsLoaded=(newComics) => {\n        let ended = false;\n        if(newComics.length < 8 ){\n            ended = true;\n        }\n        setComicsList(comicsList =>[...comicsList,...newComics])\n        setNewItemLoading(false);\n        setOffset(offset=> offset+8);\n        setComicsEnded(charEnded=> ended);\n\n    }\n\n    function renderItems(arr){\n        const items= arr.map((item,i)=>{\n            const objectFit = item.thumbnail===`http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg`? {objectFit:'contain'}:{objectFit:'cover'} ;\n            return(\n                <CSSTransition classNames='comics__item' timeout={1500} key={item.id}>\n                 <li key={i} className=\"comics__item\">\n                    <Link to={`/comics/${item.id}`} href=\"#\">\n                        <img style={objectFit} src={item.thumbnail} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n                </CSSTransition>\n            )\n\n        })\n        return(\n            <ul className=\"comics__grid\">\n                <TransitionGroup component={null}>\n                {items}\n                </TransitionGroup>\n            </ul>\n        )\n    }\n\n    \n\n\n    \n\n    return (\n        <div className=\"comics__list\">\n            {\n                setContent(process,()=> renderItems(comicsList), newItemLoading)\n            }\n            <button\n            disabled={newItemLoading} \n            onClick={()=> onRequest(offset)}\n            className=\"button button__main button__long\">\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from 'react-helmet'\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\"\r\nimport ComicsList from \"../comicsList/ComicsList\"\r\n\r\nconst ComicsPage = ()=>{\r\n\treturn(\r\n\t\t<>\r\n\t\t<Helmet>\r\n            <meta\r\n                name=\"description\"\r\n                content=\"Page with list of our comics\"\r\n            />\r\n        <title>Comics page</title>\r\n        </Helmet>\r\n\t\t<AppBanner/>\r\n        <ComicsList/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ComicsPage","import { useHttp } from '../components/hooks/http.hook';\r\n\r\nconst useMarvelService = ()=>{\r\n\tconst {loading,request,error,clearError,process,setProcess} = useHttp();\r\n\t\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=ff5ce3ecbcc8c665529b8eaa817b386d'\r\n\tconst _baseOffset= 210;\r\n\t\r\n\tconst getAllComics = async(offset=_baseOffset)=>{\r\n\t\tconst res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\tconst getComics = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n\tconst getAllCharacters =async (offset = _baseOffset)=>{\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t}\r\n\tconst getCharacter = async(id)=>{\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t}\r\n\tconst getCharacterByName = async(name)=>{\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n\t}\r\n\tconst _transformComics = (comics)=>{\r\n\t\treturn{\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description? comics.description:'There is no description',\r\n\t\t\tpageCount: comics.pageCount?`${comics.pageCount} p.`:'No information about of number of pages',\r\n\t\t\tlanguage: comics.textObjects.language || 'en-us',\r\n\t\t\tthumbnail: comics.thumbnail.path +'.'+ comics.thumbnail.extension,\r\n\t\t\tprice: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available'\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformCharacter = (char)=>{\r\n\t\treturn {\r\n\t\t\t  \tname: char.name,\r\n                description: char.description,\r\n                thumbnail: char.thumbnail.path +'.'+ char.thumbnail.extension,\r\n                homepage: char.urls[0].url,\r\n                wiki: char.urls[1].url,\r\n\t\t\t\tid: char.id,\r\n\t\t\t\tcomics: char.comics.items\r\n\t\t}\r\n\t}\r\n\r\n\treturn {loading, \r\n\t\terror,\r\n\t\tprocess,\r\n\t\tsetProcess, \r\n\t\tgetAllCharacters, \r\n\t\tgetCharacter,\r\n\t\tclearError,\r\n\t\tgetAllComics,\r\n\t\tgetComics,\r\n\t\tgetCharacterByName\r\n}\r\n}\r\n\r\nexport default useMarvelService","import {useState,useCallback} from 'react';\r\n\r\nexport const useHttp = () =>{\r\n\r\n\tconst [process, setProcess] = useState('waiting');\r\n\r\n\tconst request = useCallback(async (url,method='GET',body=null,headers={\r\n\t\t'Content-type': 'application/json'\r\n\t}) =>{\r\n\t\tsetProcess('loading');\r\n\t\ttry{\r\n\t\t\tconst response = await fetch(url,{method,body,headers});\r\n\t\t\tif(!response.ok){\r\n\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n\t\t}\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}catch(e){\r\n\t\t\tsetProcess('error');\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t},[]);\r\n\tconst clearError = useCallback(() =>{\r\n\t\tsetProcess('loading');\r\n\t},[])\r\n\treturn{request,clearError, process,setProcess}\r\n}\t"],"names":["className","src","avengers","alt","avengersLogo","style","display","width","height","objectFit","margin","img","setContent","process","Component","newItemLoading","Spinner","ErrorMessage","Error","useState","comicsList","setComicsList","setNewItemLoading","offset","setOffset","setComicsEnded","useMarvelService","getAllComics","loading","error","setProcess","useEffect","onRequest","initial","then","onComicsLoaded","newComics","ended","length","charEnded","arr","items","map","item","i","thumbnail","CSSTransition","classNames","timeout","to","id","href","title","price","TransitionGroup","component","renderItems","disabled","onClick","Helmet","name","content","AppBanner","request","useCallback","url","method","body","headers","fetch","response","ok","status","json","data","clearError","useHttp","_apiBase","_apiKey","_baseOffset","res","results","_transformComics","getComics","getAllCharacters","_transformCharacter","getCharacter","getCharacterByName","comics","description","pageCount","language","textObjects","path","extension","prices","char","homepage","urls","wiki"],"sourceRoot":""}