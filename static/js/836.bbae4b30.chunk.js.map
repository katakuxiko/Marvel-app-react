{"version":3,"file":"static/js/836.bbae4b30.chunk.js","mappings":"yRAiBA,EAbkB,WACd,OACI,iBAAKA,UAAU,cAAf,WACI,gBAAKC,IAAKC,EAAUC,IAAI,cACxB,iBAAKH,UAAU,mBAAf,oCAC0B,kBAD1B,kBAIA,gBAAKC,IAAKG,EAAcD,IAAI,oBAGvC,E,+DCmED,EAzEmB,WACf,OAAmCE,EAAAA,EAAAA,UAAS,IAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4CF,EAAAA,EAAAA,WAAS,GAArD,eAAOG,EAAP,KAAuBC,EAAvB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,KAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAAsCN,EAAAA,EAAAA,WAAS,GAA/C,eAAoBO,GAApB,WAEA,GAAsCC,EAAAA,EAAAA,KAA/BC,EAAP,EAAOA,QAAQC,EAAf,EAAeA,MAAMC,EAArB,EAAqBA,cAErBC,EAAAA,EAAAA,YAAU,WACNC,EAAUR,GAAO,EACpB,GAAC,IAEF,IAAMQ,EAAU,SAACR,EAAQS,GACXV,GAAVU,GACAH,EAAaN,GACRU,KAAKC,EACb,EACKA,EAAe,SAACC,GAClB,IAAIC,GAAQ,EACTD,EAAUE,OAAS,IAClBD,GAAQ,GAEZhB,GAAc,SAAAD,GAAU,wBAAOA,IAAP,OAAqBgB,GAArB,IACxBb,GAAkB,GAClBE,GAAU,SAAAD,GAAM,OAAGA,EAAO,CAAV,IAChBE,GAAe,SAAAa,GAAS,OAAGF,CAAH,GAE3B,EA0BD,IAAMG,EAxBN,SAAqBC,GACjB,IAAMD,EAAOC,EAAIC,KAAI,SAACC,EAAKC,GACvB,IAAMC,EAAY,wEAAAF,EAAKG,UAAmF,CAACD,UAAU,WAAW,CAACA,UAAU,SAC3I,OACK,eAAY/B,UAAU,eAAtB,UACG,UAAC,KAAD,CAAMiC,GAAE,kBAAaJ,EAAKK,IAAMC,KAAK,IAArC,WACI,gBAAKC,MAAOL,EAAW9B,IAAK4B,EAAKG,UAAW7B,IAAI,eAAeH,UAAU,sBACzE,gBAAKA,UAAU,oBAAf,SAAoC6B,EAAKQ,SACzC,gBAAKrC,UAAU,qBAAf,SAAqC6B,EAAKS,YAJxCR,EASjB,IACD,OACI,eAAI9B,UAAU,eAAd,SACK0B,GAGZ,CAKaa,CAAYjC,GAEpBkC,EAAezB,GAAQ,SAAC0B,EAAA,EAAD,IAAkB,KACzCC,EAAU5B,IAAUN,GAAiB,SAACmC,EAAA,EAAD,IAAa,KAExD,OACI,iBAAK3C,UAAU,eAAf,UACKwC,EACAE,EACAhB,GACD,mBACAkB,SAAUpC,EACVqC,QAAS,kBAAK3B,EAAUR,EAAf,EACTV,UAAU,mCAHV,UAII,gBAAKA,UAAU,QAAf,2BAIf,ECpED,EATmB,WAClB,OACC,iCACA,SAAC,EAAD,KACM,SAAC,EAAD,MAGP,C,gFCNc,SAAS8C,EAAmBnB,GACzC,OCJa,SAA4BA,GACzC,GAAIoB,MAAMC,QAAQrB,GAAM,OAAO,EAAAsB,EAAA,GAAiBtB,EAClD,CDES,CAAkBA,IELZ,SAA0BuB,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,EACtH,CFGmC,CAAgBvB,KAAQ,EAAA2B,EAAA,GAA2B3B,IGLvE,WACb,MAAM,IAAI4B,UAAU,uIACtB,CHG8F,EAC9F,C","sources":["components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import {useState,useEffect} from 'react'\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport './comicsList.scss';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\n\nconst ComicsList = () => {\n    const [comicsList,setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(true);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading,error,getAllComics} =  useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset,true)\n    },[])\n\n    const onRequest=(offset, initial) => {\n        initial ? setNewItemLoading(false):setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsLoaded)\n    }\n    const onComicsLoaded=(newComics) => {\n        let ended = false;\n        if(newComics.length < 8 ){\n            ended = true;\n        }\n        setComicsList(comicsList =>[...comicsList,...newComics])\n        setNewItemLoading(false);\n        setOffset(offset=> offset+8);\n        setComicsEnded(charEnded=> ended);\n\n    }\n\n    function renderItems(arr){\n        const items= arr.map((item,i)=>{\n            const objectFit = item.thumbnail===`http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg`? {objectFit:'contain'}:{objectFit:'cover'} ;\n            return(\n                 <li key={i} className=\"comics__item\">\n                    <Link to={`/comics/${item.id}`} href=\"#\">\n                        <img style={objectFit} src={item.thumbnail} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n\n        })\n        return(\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    \n\n\n    const items = renderItems(comicsList);\n    \n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading&&!newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n            disabled={newItemLoading} \n            onClick={()=> onRequest(offset)}\n            className=\"button button__main button__long\">\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\"\r\nimport ComicsList from \"../comicsList/ComicsList\"\r\n\r\nconst ComicsPage = ()=>{\r\n\treturn(\r\n\t\t<>\r\n\t\t<AppBanner/>\r\n        <ComicsList/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ComicsPage","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["className","src","avengers","alt","avengersLogo","useState","comicsList","setComicsList","newItemLoading","setNewItemLoading","offset","setOffset","setComicsEnded","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsLoaded","newComics","ended","length","charEnded","items","arr","map","item","i","objectFit","thumbnail","to","id","href","style","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","onClick","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}